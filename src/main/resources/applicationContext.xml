<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- 서비스 객체 동의 소스에서 필요한 객체등록 시 사용하는 어노테이션 -->
	<context:component-scan base-package="com.blue"></context:component-scan>
	
	<!-- 예외처리, xml 메시지 변환 등 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!--  AOP 관련 어노테이션 기능 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 데이터소스 설정 -->
	<context:property-placeholder location = "classpath:config/database.properties"></context:property-placeholder>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- SqlSessionFactoryBean 등록 -->
	<!-- 데이터베이스 세션을 생성해 주는 객체 -->
 
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>		
	</bean>
	
	<!-- SqlSessionTemplate 객체(DAO에서 사용하는 Sql session 객체) 제공  -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sessionFactory"></constructor-arg>
	</bean>
		
</beans>